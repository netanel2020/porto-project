{"ast":null,"code":"import { latinMap } from './latin-map';\nexport var TypeaheadUtils = function () {\n  function TypeaheadUtils() {}\n\n  TypeaheadUtils.latinize = function (str) {\n    if (!str) {\n      return '';\n    }\n\n    return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a) {\n      return TypeaheadUtils.latinMap[a] || a;\n    });\n  };\n\n  TypeaheadUtils.escapeRegexp = function (queryToEscape) {\n    // Regex: capture the whole query string and replace it with the string\n    // that will be used to match the results, for example if the capture is\n    // 'a' the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  };\n  /* tslint:disable */\n\n\n  TypeaheadUtils.tokenize = function (str, wordRegexDelimiters, phraseRegexDelimiters) {\n    if (wordRegexDelimiters === void 0) {\n      wordRegexDelimiters = ' ';\n    }\n\n    if (phraseRegexDelimiters === void 0) {\n      phraseRegexDelimiters = '';\n    }\n    /* tslint:enable */\n\n\n    var regexStr = '(?:[' + phraseRegexDelimiters + '])([^' + phraseRegexDelimiters + ']+)(?:[' + phraseRegexDelimiters + '])|([^' + wordRegexDelimiters + ']+)';\n    var preTokenized = str.split(new RegExp(regexStr, 'g'));\n    var result = [];\n    var preTokenizedLength = preTokenized.length;\n    var token;\n    var replacePhraseDelimiters = new RegExp('[' + phraseRegexDelimiters + ']+', 'g');\n\n    for (var i = 0; i < preTokenizedLength; i += 1) {\n      token = preTokenized[i];\n\n      if (token && token.length && token !== wordRegexDelimiters) {\n        result.push(token.replace(replacePhraseDelimiters, ''));\n      }\n    }\n\n    return result;\n  };\n\n  TypeaheadUtils.getValueFromObject = function (object, option) {\n    if (!option || typeof object !== 'object') {\n      return object.toString();\n    }\n\n    if (option.endsWith('()')) {\n      var functionName = option.slice(0, option.length - 2);\n      return object[functionName]().toString();\n    }\n\n    var properties = option.replace(/\\[(\\w+)\\]/g, '.$1').replace(/^\\./, '');\n    var propertiesArray = properties.split('.');\n\n    for (var _i = 0, propertiesArray_1 = propertiesArray; _i < propertiesArray_1.length; _i++) {\n      var property = propertiesArray_1[_i];\n\n      if (property in object) {\n        object = object[property];\n      }\n    }\n\n    return object.toString();\n  };\n\n  TypeaheadUtils.latinMap = latinMap;\n  return TypeaheadUtils;\n}(); //# sourceMappingURL=typeahead-utils.js.map","map":null,"metadata":{},"sourceType":"module"}