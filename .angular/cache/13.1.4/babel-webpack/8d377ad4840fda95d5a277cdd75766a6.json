{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './alert.config';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"*\"];\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from '../utils/decorators';\nexport var AlertComponent = function () {\n  function AlertComponent(_config) {\n    var _this = this;\n    /** Alert type. Provides one of four bootstrap supported contextual classes: `success`, `info`, `warning` and `danger` */\n\n\n    this.type = 'warning';\n    /** If set, displays an inline \"Close\" button */\n\n    this.dismissible = false;\n    /** This event fires immediately after close instance method is called, $event is an instance of Alert component. */\n\n    this.onClose = new EventEmitter();\n    /** This event fires when alert closed, $event is an instance of Alert component */\n\n    this.onClosed = new EventEmitter();\n    this.isClosed = false;\n    this.classes = '';\n    this.dismissibleChange = new EventEmitter();\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe(function (dismissible) {\n      _this.classes = _this.dismissible ? 'alert-dismissible' : '';\n    });\n  }\n\n  AlertComponent.prototype.ngOnInit = function () {\n    var _this = this;\n\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(function () {\n        return _this.close();\n      }, parseInt(this.dismissOnTimeout, 10));\n    }\n  }; // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n\n\n  AlertComponent.prototype.close = function () {\n    if (this.isClosed) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isClosed = true;\n    this.onClosed.emit(this);\n  };\n  /** @nocollapse */\n\n\n  AlertComponent.ctorParameters = function () {\n    return [{\n      type: AlertConfig\n    }];\n  };\n\n  AlertComponent.propDecorators = {\n    'type': [{\n      type: Input\n    }],\n    'dismissible': [{\n      type: Input\n    }],\n    'dismissOnTimeout': [{\n      type: Input\n    }],\n    'onClose': [{\n      type: Output\n    }],\n    'onClosed': [{\n      type: Output\n    }]\n  };\n\n  __decorate([OnChange(), __metadata('design:type', Boolean)], AlertComponent.prototype, \"dismissible\", void 0);\n\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertConfig));\n  };\n\n  AlertComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"alert\"], [\"ngx-alert\"]],\n    inputs: {\n      type: \"type\",\n      dismissible: \"dismissible\",\n      dismissOnTimeout: \"dismissOnTimeout\"\n    },\n    outputs: {\n      onClose: \"onClose\",\n      onClosed: \"onClosed\"\n    },\n    ngContentSelectors: _c0,\n    decls: 19,\n    vars: 5,\n    consts: [[3, \"ngIf\"], [\"role\", \"alert\", 3, \"ngClass\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"template\", 0);\n        ɵngcc0.ɵɵtext(1, \"\\n  \");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtext(3, \"\\n    \");\n        ɵngcc0.ɵɵelementStart(4, \"template\", 0);\n        ɵngcc0.ɵɵtext(5, \"\\n      \");\n        ɵngcc0.ɵɵelementStart(6, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function AlertComponent_Template_button_click_6_listener() {\n          return ctx.close();\n        });\n        ɵngcc0.ɵɵtext(7, \"\\n        \");\n        ɵngcc0.ɵɵelementStart(8, \"span\", 3);\n        ɵngcc0.ɵɵtext(9, \"\\u00D7\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(10, \"\\n        \");\n        ɵngcc0.ɵɵelementStart(11, \"span\", 4);\n        ɵngcc0.ɵɵtext(12, \"Close\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(13, \"\\n      \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(14, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(15, \"\\n    \");\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵtext(17, \"\\n  \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(18, \"\\n\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isClosed);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(\"alert alert-\" + ctx.type);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classes);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc2.NgClass],\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return AlertComponent;\n}(); //# sourceMappingURL=alert.component.js.map","map":null,"metadata":{},"sourceType":"module"}