{"ast":null,"code":"import { Directive, Input, ViewContainerRef } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nexport var NgTranscludeDirective = function () {\n  function NgTranscludeDirective(viewRef) {\n    this.viewRef = viewRef;\n  }\n\n  Object.defineProperty(NgTranscludeDirective.prototype, \"ngTransclude\", {\n    get: function () {\n      return this._ngTransclude;\n    },\n    set: function (templateRef) {\n      this._ngTransclude = templateRef;\n\n      if (templateRef) {\n        this.viewRef.createEmbeddedView(templateRef);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @nocollapse */\n\n  NgTranscludeDirective.ctorParameters = function () {\n    return [{\n      type: ViewContainerRef\n    }];\n  };\n\n  NgTranscludeDirective.propDecorators = {\n    'ngTransclude': [{\n      type: Input\n    }]\n  };\n\n  NgTranscludeDirective.ɵfac = function NgTranscludeDirective_Factory(t) {\n    return new (t || NgTranscludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n\n  NgTranscludeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgTranscludeDirective,\n    selectors: [[\"\", \"ngTransclude\", \"\"]],\n    inputs: {\n      ngTransclude: \"ngTransclude\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return NgTranscludeDirective;\n}(); //# sourceMappingURL=ng-transclude.directive.js.map","map":null,"metadata":{},"sourceType":"module"}