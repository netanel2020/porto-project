{"ast":null,"code":"import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TimepickerConfig } from './timepicker.config';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './timepicker.config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/forms';\n\nvar _c0 = function (a0) {\n  return {\n    hidden: a0\n  };\n};\n\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(1, _c0, !ctx_r0.showMeridian));\n  }\n}\n\nvar _c1 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_19_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c0, !ctx_r1.showMeridian));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r1.noToggleMeridian() || ctx_r1.readonlyInput));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.meridian);\n  }\n}\n\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(1, _c0, !ctx_r2.showMeridian));\n  }\n}\n\nvar _c2 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\n\nexport var TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return TimepickerComponent;\n  }),\n  multi: true\n}; // todo: refactor directive has to many functions! (extract to stateless helper)\n// todo: use moment js?\n// todo: implement `time` validator\n// todo: replace increment/decrement blockers with getters, or extract\n// todo: unify work with selected\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined';\n}\n\nfunction addMinutes(date, minutes) {\n  var dt = new Date(date.getTime() + minutes * 60000);\n  var newDate = new Date(date);\n  newDate.setHours(dt.getHours(), dt.getMinutes());\n  return newDate;\n}\n\nexport var TimepickerComponent = function () {\n  function TimepickerComponent(_config) {\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype; // result value\n\n    this._selected = new Date();\n    this.config = _config;\n    Object.assign(this, _config);\n  }\n\n  Object.defineProperty(TimepickerComponent.prototype, \"showMeridian\", {\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    get: function () {\n      return this._showMeridian;\n    },\n    set: function (value) {\n      this._showMeridian = value; // || !this.$error.time\n      // if (true) {\n\n      this.updateTemplate();\n      return; // }\n      // Evaluate from template\n\n      /*let hours = this.getHoursFromTemplate();\n       let minutes = this.getMinutesFromTemplate();\n       if (isDefined(hours) && isDefined(minutes)) {\n       this.selected.setHours(hours);\n       this.refresh();\n       }*/\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimepickerComponent.prototype, \"selected\", {\n    get: function () {\n      return this._selected;\n    },\n    set: function (v) {\n      if (v) {\n        this._selected = v;\n        this.updateTemplate();\n        this.onChange(this.selected);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  }); // todo: add formatter value to Date object\n\n  TimepickerComponent.prototype.ngOnInit = function () {\n    // todo: take in account $locale.DATETIME_FORMATS.AMPMS;\n    if (this.mousewheel) {}\n\n    if (this.arrowkeys) {} // this.setupInputEvents();\n\n  };\n\n  TimepickerComponent.prototype.writeValue = function (v) {\n    if (v === this.selected) {\n      return;\n    }\n\n    if (v && v instanceof Date) {\n      this.selected = v;\n      return;\n    }\n\n    this.selected = v ? new Date(v) : void 0;\n  };\n\n  TimepickerComponent.prototype.registerOnChange = function (fn) {\n    this.onChange = fn;\n  };\n\n  TimepickerComponent.prototype.registerOnTouched = function (fn) {\n    this.onTouched = fn;\n  };\n\n  TimepickerComponent.prototype.setDisabledState = function (isDisabled) {\n    this.readonlyInput = isDisabled;\n  };\n\n  TimepickerComponent.prototype.updateHours = function () {\n    if (this.readonlyInput) {\n      return;\n    }\n\n    var hours = this.getHoursFromTemplate();\n    var minutes = this.getMinutesFromTemplate();\n    this.invalidHours = !isDefined(hours);\n    this.invalidMinutes = !isDefined(minutes);\n\n    if (this.invalidHours || this.invalidMinutes) {\n      // TODO: needed a validation functionality.\n      return;\n    }\n\n    this.selected.setHours(hours);\n    this.invalidHours = this.selected < this.min || this.selected > this.max;\n\n    if (this.invalidHours) {\n      // todo: validation?\n      // invalidate(true);\n      return;\n    } else {\n      this.refresh();\n    }\n  };\n\n  TimepickerComponent.prototype.hoursOnBlur = function () {\n    if (this.readonlyInput) {\n      return;\n    } // todo: binded with validation\n\n\n    if (!this.invalidHours && parseInt(this.hours, 10) < 10) {\n      this.hours = this.pad(this.hours);\n    }\n  };\n\n  TimepickerComponent.prototype.updateMinutes = function () {\n    if (this.readonlyInput) {\n      return;\n    }\n\n    var minutes = this.getMinutesFromTemplate();\n    var hours = this.getHoursFromTemplate();\n    this.invalidMinutes = !isDefined(minutes);\n    this.invalidHours = !isDefined(hours);\n\n    if (this.invalidMinutes || this.invalidHours) {\n      // TODO: needed a validation functionality.\n      return;\n    }\n\n    this.selected.setMinutes(minutes);\n    this.invalidMinutes = this.selected < this.min || this.selected > this.max;\n\n    if (this.invalidMinutes) {\n      // todo: validation\n      // invalidate(undefined, true);\n      return;\n    } else {\n      this.refresh();\n    }\n  };\n\n  TimepickerComponent.prototype.minutesOnBlur = function () {\n    if (this.readonlyInput) {\n      return;\n    }\n\n    if (!this.invalidMinutes && parseInt(this.minutes, 10) < 10) {\n      this.minutes = this.pad(this.minutes);\n    }\n  };\n\n  TimepickerComponent.prototype.incrementHours = function () {\n    if (!this.noIncrementHours()) {\n      this.addMinutesToSelected(this.hourStep * 60);\n    }\n  };\n\n  TimepickerComponent.prototype.decrementHours = function () {\n    if (!this.noDecrementHours()) {\n      this.addMinutesToSelected(-this.hourStep * 60);\n    }\n  };\n\n  TimepickerComponent.prototype.incrementMinutes = function () {\n    if (!this.noIncrementMinutes()) {\n      this.addMinutesToSelected(this.minuteStep);\n    }\n  };\n\n  TimepickerComponent.prototype.decrementMinutes = function () {\n    if (!this.noDecrementMinutes()) {\n      this.addMinutesToSelected(-this.minuteStep);\n    }\n  };\n\n  TimepickerComponent.prototype.noIncrementHours = function () {\n    var incrementedSelected = addMinutes(this.selected, this.hourStep * 60);\n    return incrementedSelected > this.max || incrementedSelected < this.selected && incrementedSelected < this.min;\n  };\n\n  TimepickerComponent.prototype.noDecrementHours = function () {\n    var decrementedSelected = addMinutes(this.selected, -this.hourStep * 60);\n    return decrementedSelected < this.min || decrementedSelected > this.selected && decrementedSelected > this.max;\n  };\n\n  TimepickerComponent.prototype.noIncrementMinutes = function () {\n    var incrementedSelected = addMinutes(this.selected, this.minuteStep);\n    return incrementedSelected > this.max || incrementedSelected < this.selected && incrementedSelected < this.min;\n  };\n\n  TimepickerComponent.prototype.noDecrementMinutes = function () {\n    var decrementedSelected = addMinutes(this.selected, -this.minuteStep);\n    return decrementedSelected < this.min || decrementedSelected > this.selected && decrementedSelected > this.max;\n  };\n\n  TimepickerComponent.prototype.toggleMeridian = function () {\n    if (!this.noToggleMeridian()) {\n      var sign = this.selected.getHours() < 12 ? 1 : -1;\n      this.addMinutesToSelected(12 * 60 * sign);\n    }\n  };\n\n  TimepickerComponent.prototype.noToggleMeridian = function () {\n    if (this.readonlyInput) {\n      return true;\n    }\n\n    if (this.selected.getHours() < 13) {\n      return addMinutes(this.selected, 12 * 60) > this.max;\n    } else {\n      return addMinutes(this.selected, -12 * 60) < this.min;\n    }\n  };\n\n  TimepickerComponent.prototype.refresh = function () {\n    // this.makeValid();\n    this.updateTemplate();\n    this.onChange(this.selected);\n  };\n\n  TimepickerComponent.prototype.updateTemplate = function () {\n    var hours = this.selected.getHours();\n    var minutes = this.selected.getMinutes();\n\n    if (this.showMeridian) {\n      // Convert 24 to 12 hour system\n      hours = hours === 0 || hours === 12 ? 12 : hours % 12;\n    } // this.hours = keyboardChange === 'h' ? hours : this.pad(hours);\n    // if (keyboardChange !== 'm') {\n    //  this.minutes = this.pad(minutes);\n    // }\n\n\n    this.hours = this.pad(hours);\n    this.minutes = this.pad(minutes);\n\n    if (!this.meridians) {\n      this.meridians = this.config.meridians;\n    }\n\n    this.meridian = this.selected.getHours() < 12 ? this.meridians[0] : this.meridians[1];\n  };\n\n  TimepickerComponent.prototype.getHoursFromTemplate = function () {\n    var hours = parseInt(this.hours, 10);\n    var valid = this.showMeridian ? hours > 0 && hours < 13 : hours >= 0 && hours < 24;\n\n    if (!valid) {\n      return void 0;\n    }\n\n    if (this.showMeridian) {\n      if (hours === 12) {\n        hours = 0;\n      }\n\n      if (this.meridian === this.meridians[1]) {\n        hours = hours + 12;\n      }\n    }\n\n    return hours;\n  };\n\n  TimepickerComponent.prototype.getMinutesFromTemplate = function () {\n    var minutes = parseInt(this.minutes, 10);\n    return minutes >= 0 && minutes < 60 ? minutes : undefined;\n  };\n\n  TimepickerComponent.prototype.pad = function (value) {\n    return isDefined(value) && value.toString().length < 2 ? '0' + value : value.toString();\n  };\n\n  TimepickerComponent.prototype.addMinutesToSelected = function (minutes) {\n    this.selected = addMinutes(this.selected, minutes);\n    this.refresh();\n  };\n  /** @nocollapse */\n\n\n  TimepickerComponent.ctorParameters = function () {\n    return [{\n      type: TimepickerConfig\n    }];\n  };\n\n  TimepickerComponent.propDecorators = {\n    'hourStep': [{\n      type: Input\n    }],\n    'minuteStep': [{\n      type: Input\n    }],\n    'readonlyInput': [{\n      type: Input\n    }],\n    'mousewheel': [{\n      type: Input\n    }],\n    'arrowkeys': [{\n      type: Input\n    }],\n    'showSpinners': [{\n      type: Input\n    }],\n    'min': [{\n      type: Input\n    }],\n    'max': [{\n      type: Input\n    }],\n    'meridians': [{\n      type: Input\n    }],\n    'showMeridian': [{\n      type: Input\n    }]\n  };\n\n  TimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) {\n    return new (t || TimepickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TimepickerConfig));\n  };\n\n  TimepickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TimepickerComponent,\n    selectors: [[\"timepicker\"]],\n    inputs: {\n      showMeridian: \"showMeridian\",\n      readonlyInput: \"readonlyInput\",\n      meridians: \"meridians\",\n      hourStep: \"hourStep\",\n      minuteStep: \"minuteStep\",\n      mousewheel: \"mousewheel\",\n      arrowkeys: \"arrowkeys\",\n      showSpinners: \"showSpinners\",\n      min: \"min\",\n      max: \"max\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR])],\n    decls: 30,\n    vars: 31,\n    consts: [[1, \"text-center\", 3, \"ngClass\"], [1, \"btn\", \"btn-link\", 3, \"ngClass\", \"click\"], [1, \"glyphicon\", \"glyphicon-chevron-up\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"form-group\", 3, \"ngClass\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", 2, \"width\", \"50px\", 3, \"ngModel\", \"readonly\", \"ngModelChange\", \"change\", \"blur\"], [1, \"glyphicon\", \"glyphicon-chevron-down\"], [3, \"ngClass\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"ngClass\", \"click\"]],\n    template: function TimepickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\");\n        ɵngcc0.ɵɵelementStart(1, \"tbody\");\n        ɵngcc0.ɵɵelementStart(2, \"tr\", 0);\n        ɵngcc0.ɵɵelementStart(3, \"td\");\n        ɵngcc0.ɵɵelementStart(4, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n          return ctx.incrementHours();\n        });\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"td\");\n        ɵngcc0.ɵɵtext(7, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"td\");\n        ɵngcc0.ɵɵelementStart(9, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_9_listener() {\n          return ctx.incrementMinutes();\n        });\n        ɵngcc0.ɵɵelement(10, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 3, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"tr\");\n        ɵngcc0.ɵɵelementStart(13, \"td\", 4);\n        ɵngcc0.ɵɵelementStart(14, \"input\", 5);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function TimepickerComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.hours = $event;\n        })(\"change\", function TimepickerComponent_Template_input_change_14_listener() {\n          return ctx.updateHours();\n        })(\"blur\", function TimepickerComponent_Template_input_blur_14_listener() {\n          return ctx.hoursOnBlur();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"td\");\n        ɵngcc0.ɵɵtext(16, \":\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(17, \"td\", 4);\n        ɵngcc0.ɵɵelementStart(18, \"input\", 5);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function TimepickerComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.minutes = $event;\n        })(\"change\", function TimepickerComponent_Template_input_change_18_listener() {\n          return ctx.updateMinutes();\n        })(\"blur\", function TimepickerComponent_Template_input_blur_18_listener() {\n          return ctx.minutesOnBlur();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 3, 7, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(20, \"tr\", 0);\n        ɵngcc0.ɵɵelementStart(21, \"td\");\n        ɵngcc0.ɵɵelementStart(22, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_22_listener() {\n          return ctx.decrementHours();\n        });\n        ɵngcc0.ɵɵelement(23, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(24, \"td\");\n        ɵngcc0.ɵɵtext(25, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(26, \"td\");\n        ɵngcc0.ɵɵelementStart(27, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_27_listener() {\n          return ctx.decrementMinutes();\n        });\n        ɵngcc0.ɵɵelement(28, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 1, 3, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(15, _c0, !ctx.showSpinners || ctx.readonlyInput));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(17, _c1, ctx.noIncrementHours()));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx.noIncrementMinutes()));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(21, _c2, ctx.invalidHours));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.hours)(\"readonly\", ctx.readonlyInput);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(23, _c2, ctx.invalidMinutes));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.minutes)(\"readonly\", ctx.readonlyInput);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(25, _c0, !ctx.showSpinners || ctx.readonlyInput));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(27, _c1, ctx.noDecrementHours()));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(29, _c1, ctx.noDecrementMinutes()));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      }\n    },\n    directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc3.DefaultValueAccessor, ɵngcc3.MaxLengthValidator, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return TimepickerComponent;\n}(); //# sourceMappingURL=timepicker.component.js.map","map":null,"metadata":{},"sourceType":"module"}