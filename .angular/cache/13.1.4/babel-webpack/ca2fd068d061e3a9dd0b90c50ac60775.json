{"ast":null,"code":"import { Component } from '@angular/core';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { DatePickerInnerComponent } from './datepicker-inner.component'; // write an interface for template options\n\nvar TEMPLATE_OPTIONS = {\n  'bs4': {\n    ARROW_LEFT: '&lt;',\n    ARROW_RIGHT: '&gt;'\n  },\n  'bs3': {\n    ARROW_LEFT: \"\\n    <i class=\\\"glyphicon glyphicon-chevron-left\\\"></i>\\n    \",\n    ARROW_RIGHT: \"\\n    <i class=\\\"glyphicon glyphicon-chevron-right\\\"></i>\\n    \"\n  }\n};\nexport var DayPickerComponent = function () {\n  function DayPickerComponent(datePicker) {\n    this.labels = [];\n    this.rows = [];\n    this.weekNumbers = [];\n    this.CURRENT_THEME_TEMPLATE = isBs3() ? TEMPLATE_OPTIONS.bs3 : TEMPLATE_OPTIONS.bs4;\n    this.datePicker = datePicker;\n  }\n\n  Object.defineProperty(DayPickerComponent.prototype, \"isBs4\", {\n    get: function () {\n      return !isBs3();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /*protected getDaysInMonth(year:number, month:number) {\n   return ((month === 1) && (year % 4 === 0) &&\n   ((year % 100 !== 0) || (year % 400 === 0))) ? 29 : DAYS_IN_MONTH[month];\n   }*/\n\n  DayPickerComponent.prototype.ngOnInit = function () {\n    var self = this;\n    this.datePicker.stepDay = {\n      months: 1\n    };\n    this.datePicker.setRefreshViewHandler(function () {\n      var year = this.activeDate.getFullYear();\n      var month = this.activeDate.getMonth();\n      var firstDayOfMonth = new Date(year, month, 1);\n      var difference = this.startingDay - firstDayOfMonth.getDay();\n      var numDisplayedFromPreviousMonth = difference > 0 ? 7 - difference : -difference;\n      var firstDate = new Date(firstDayOfMonth.getTime());\n\n      if (numDisplayedFromPreviousMonth > 0) {\n        firstDate.setDate(-numDisplayedFromPreviousMonth + 1);\n      } // 42 is the number of days on a six-week calendar\n\n\n      var _days = self.getDates(firstDate, 42);\n\n      var days = [];\n\n      for (var i = 0; i < 42; i++) {\n        var _dateObject = this.createDateObject(_days[i], this.formatDay);\n\n        _dateObject.secondary = _days[i].getMonth() !== month;\n        _dateObject.uid = this.uniqueId + '-' + i;\n        days[i] = _dateObject;\n      }\n\n      self.labels = [];\n\n      for (var j = 0; j < 7; j++) {\n        self.labels[j] = {};\n        self.labels[j].abbr = this.dateFilter(days[j].date, this.formatDayHeader);\n        self.labels[j].full = this.dateFilter(days[j].date, 'EEEE');\n      }\n\n      self.title = this.dateFilter(this.activeDate, this.formatDayTitle);\n      self.rows = this.split(days, 7);\n\n      if (this.showWeeks) {\n        self.weekNumbers = [];\n        var thursdayIndex = (4 + 7 - this.startingDay) % 7;\n        var numWeeks = self.rows.length;\n\n        for (var curWeek = 0; curWeek < numWeeks; curWeek++) {\n          self.weekNumbers.push(self.getISO8601WeekNumber(self.rows[curWeek][thursdayIndex].date));\n        }\n      }\n    }, 'day');\n    this.datePicker.setCompareHandler(function (date1, date2) {\n      var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n      var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n      return d1.getTime() - d2.getTime();\n    }, 'day');\n    this.datePicker.refreshView();\n  };\n\n  DayPickerComponent.prototype.getDates = function (startDate, n) {\n    var dates = new Array(n);\n    var current = new Date(startDate.getTime());\n    var i = 0;\n    var date;\n\n    while (i < n) {\n      date = new Date(current.getTime());\n      date = this.datePicker.fixTimeZone(date);\n      dates[i++] = date;\n      current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  DayPickerComponent.prototype.getISO8601WeekNumber = function (date) {\n    var checkDate = new Date(date.getTime()); // Thursday\n\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n    var time = checkDate.getTime(); // Compare with Jan 1\n\n    checkDate.setMonth(0);\n    checkDate.setDate(1);\n    return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n  }; // todo: key events implementation\n\n\n  DayPickerComponent.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'daypicker',\n      template: \"\\n<table *ngIf=\\\"datePicker.datepickerMode==='day'\\\" role=\\\"grid\\\" [attr.aria-labelledby]=\\\"datePicker.uniqueId+'-title'\\\" aria-activedescendant=\\\"activeDateId\\\">\\n  <thead>\\n    <tr>\\n      <th>\\n        <button type=\\\"button\\\" \\n                class=\\\"btn btn-default btn-secondary btn-sm pull-left\\\" \\n                (click)=\\\"datePicker.move(-1)\\\" \\n                tabindex=\\\"-1\\\"\\n                [innerHTML]=\\\"CURRENT_THEME_TEMPLATE.ARROW_LEFT\\\">\\n        </button>\\n      </th>\\n      <th [attr.colspan]=\\\"5 + (datePicker.showWeeks ? 1 : 0)\\\">\\n        <button [id]=\\\"datePicker.uniqueId + '-title'\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-default btn-secondary btn-sm\\\"\\n                (click)=\\\"datePicker.toggleMode()\\\"\\n                [disabled]=\\\"datePicker.datepickerMode === datePicker.maxMode\\\"\\n                [ngClass]=\\\"{disabled: datePicker.datepickerMode === datePicker.maxMode}\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\">\\n          <strong>{{title}}</strong>\\n        </button>\\n      </th>\\n      <th>\\n        <button type=\\\"button\\\" \\n                class=\\\"btn btn-default btn-secondary btn-sm pull-right\\\" \\n                (click)=\\\"datePicker.move(1)\\\" \\n                tabindex=\\\"-1\\\"\\n                [innerHTML]=\\\"CURRENT_THEME_TEMPLATE.ARROW_RIGHT\\\">\\n        </button>\\n      </th>\\n    </tr>\\n    <tr>\\n      <th *ngIf=\\\"datePicker.showWeeks\\\"></th>\\n      <th *ngFor=\\\"let labelz of labels\\\" class=\\\"text-center\\\">\\n        <small aria-label=\\\"labelz.full\\\"><b>{{labelz.abbr}}</b></small>\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <template ngFor [ngForOf]=\\\"rows\\\" let-rowz=\\\"$implicit\\\" let-index=\\\"index\\\">\\n      <tr *ngIf=\\\"!(datePicker.onlyCurrentMonth && rowz[0].secondary && rowz[6].secondary)\\\">\\n        <td *ngIf=\\\"datePicker.showWeeks\\\" class=\\\"h6\\\" class=\\\"text-center\\\">\\n          <em>{{ weekNumbers[index] }}</em>\\n        </td>\\n        <td *ngFor=\\\"let dtz of rowz\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" [id]=\\\"dtz.uid\\\">\\n          <button type=\\\"button\\\" style=\\\"min-width:100%;\\\" class=\\\"btn btn-sm {{dtz.customClass}}\\\"\\n                  *ngIf=\\\"!(datePicker.onlyCurrentMonth && dtz.secondary)\\\"\\n                  [ngClass]=\\\"{'btn-secondary': isBs4 && !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected, disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz), 'btn-default': !isBs4}\\\"\\n                  [disabled]=\\\"dtz.disabled\\\"\\n                  (click)=\\\"datePicker.select(dtz.date)\\\" tabindex=\\\"-1\\\">\\n            <span [ngClass]=\\\"{'text-muted': dtz.secondary || dtz.current, 'text-info': !isBs4 && dtz.current}\\\">{{dtz.label}}</span>\\n          </button>\\n        </td>\\n      </tr>\\n    </template>\\n  </tbody>\\n</table>\\n  \"\n    }]\n  }];\n  /** @nocollapse */\n\n  DayPickerComponent.ctorParameters = function () {\n    return [{\n      type: DatePickerInnerComponent\n    }];\n  };\n\n  return DayPickerComponent;\n}(); //# sourceMappingURL=daypicker.component.js.map","map":null,"metadata":{},"sourceType":"module"}